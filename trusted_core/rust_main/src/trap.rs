use crate::cpu::r_scause;
use crate::timer::s_timer_trap;

//Interrupt
const USER_SOFTWARE_INTERRUPT: usize = 0x8000000000000000;
const SUPERVISOR_SOFTWARE_INTERRUPT: usize = 0x8000000000000001;
const MACHINE_SOFTWARE_INTERRUPT: usize = 0x8000000000000003;
const USER_TIMER_INTERRUPT: usize = 0x8000000000000004;
const SUPERVISOR_TIMER_INTERRUPT: usize = 0x8000000000000005;
const MACHINE_TIMER_INTERRUPT: usize = 0x8000000000000007;
const USER_EXTERNAL_INTERRUPT: usize = 0x8000000000000008;
const SUPERVISOR_EXTERNAL_INTERRUPT: usize = 0x8000000000000009;
const MACHINE_EXTERNAL_INTERRUPT: usize = 0x800000000000000B;

//Exception
const INSTRUCTION_ADDRESS_MISALIGNED: usize = 0x0000000000000000;
const INSTRUCTION_ACCESS_FAULT: usize = 0x0000000000000001;
const ILLEGAL_INSTRUCTION: usize = 0x0000000000000002;
const BREAKPOINT: usize = 0x0000000000000003;
const LOAD_ADDRESS_MISALIGNED: usize = 0x0000000000000004;
const LOAD_ACCESS_FAULT: usize = 0x0000000000000005;
const STORE_ADDRESS_MISALIGNED: usize = 0x0000000000000006;
const STORE_ACCESS_FAULT: usize = 0x0000000000000007;
const ENVIRONMENT_CALL_FROM_U: usize = 0x0000000000000008;
const ENVIRONMENT_CALL_FROM_S: usize = 0x0000000000000009;
const ENVIRONMENT_CALL_FROM_M: usize = 0x000000000000000B;
const INSTRUCTION_PAGE_FAULT: usize = 0x000000000000000C;
const LOAD_PAGE_FAULT: usize = 0x000000000000000D;
const STORE_PAGE_FAULT: usize = 0x000000000000000F;

#[no_mangle]
extern "C" fn s_trap() {
    match r_scause() {
        SUPERVISOR_TIMER_INTERRUPT => s_timer_trap(),
    }
}
